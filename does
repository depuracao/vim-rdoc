declare pkg_name=rdoc
declare pkg_base=$(dirname "$0")
declare pkg_version=$(git tag | sort | tail -n 1)
declare pkg_file="${pkg_name}-${pkg_version#v}.zip"
declare prefix=".vim"

function package {
  printf "* %-40s " "Formating package"
  git archive --format=tar --prefix=$prefix/ $pkg_version | tar xf -
  printf "done\n"

  printf "* %-40s " "Removing temporary files"
  cd $prefix &> /dev/null
  local ignoreds=(.gitignore $0 *.png README.*)
  for file in ${ignoreds[@]}; do
    rm -v $file &> /dev/null
  done
  cd - &> /dev/null
  printf "done\n"

  printf "* %-40s " "Compressing package $pkg_file"
  zip -rq $pkg_file $prefix &> /dev/null
  printf "done\n"

  printf "* %-40s " "Removing temporary files"
  rm -rf $prefix &> /dev/null
  printf "done\n"

  return 0
}

function install {
  printf "* %-40s " "Formating package"
  git archive --format=tar --prefix=$prefix/ $pkg_version | tar xf -
  printf "done\n"

  printf "* %-40s " "Removing temporary files"
  cd $prefix &> /dev/null
  local ignoreds=(.gitignore $0 *.png README.*)
  for file in ${ignoreds[@]}; do
    rm -v $file &> /dev/null
  done
  cd - &> /dev/null
  printf "done\n"

  printf "* %-40s " "Copying files"
  cp -r $prefix $HOME &> /dev/null
  printf "done\n"

  printf "* %-40s " "Removing temporary files"
  rm -rf $prefix &> /dev/null
  printf "done\n"

  return 0
}

function doc {
  printf "* %-40s " "Building documentation"
  rdoc --main README.rdoc \
       --title "RDoc.vim" README.rdoc &> /dev/null
  printf "done\n"

  return 0
}

[[ $# -eq 0 ]] && {
  echo "Arguments required"
  exit 1
}

"${@}"

# vim: filetype=sh

